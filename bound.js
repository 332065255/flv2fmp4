/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.l = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };

/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};

/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};

/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 5);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _flvTag = __webpack_require__(3);\n\nvar _flvTag2 = _interopRequireDefault(_flvTag);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar FlvParse = function () {\n    function FlvParse() {\n        _classCallCheck(this, FlvParse);\n\n        this.tempUint8 = [];\n        this.arrTag = [];\n        this.index = 0;\n        this.tempArr = [];\n    }\n\n    /**\n     * 接受 外部的flv二进制数据\n     */\n\n\n    _createClass(FlvParse, [{\n        key: \"setFlv\",\n        value: function setFlv(uint8) {\n            this.tempUint8 = uint8;\n            this.parse();\n        }\n\n        /**\n         * 开始解析\n         */\n\n    }, {\n        key: \"parse\",\n        value: function parse() {\n            this.read(9); //略掉9个字节的flv header tag\n            this.read(4); //略掉第一个4字节的 tag size\n            while (this.index < this.tempUint8.length) {\n                var t = new _flvTag2.default();\n                t.tagType = this.read(1)[0]; //取出tag类型\n                t.dataSize = [].concat(this.read(3)); //取出包体大小\n                t.Timestamp = [].concat(this.read(4)); //取出解码时间\n                t.StreamID = [].concat(this.read(3)); //取出stream id\n                t.body = [].concat(this.read(this.getBodySum(t.dataSize))); //取出body\n                this.arrTag.push(t);\n                this.read(4);\n            }\n        }\n    }, {\n        key: \"read\",\n        value: function read(length) {\n            this.tempArr.length = 0;\n            for (var i = 0; i < length; i++) {\n                this.tempArr.push(this.tempUint8[this.index]);\n                this.index += 1;\n            }\n            return this.tempArr;\n        }\n\n        /**\n         * 计算tag包体大小\n         */\n\n    }, {\n        key: \"getBodySum\",\n        value: function getBodySum(arr) {\n            var _str = \"\";\n            _str += arr[0].toString(16).length == 1 ? \"0\" + arr[0].toString(16) : arr[0].toString(16);\n            _str += arr[1].toString(16).length == 1 ? \"0\" + arr[1].toString(16) : arr[1].toString(16);\n            _str += arr[2].toString(16).length == 1 ? \"0\" + arr[2].toString(16) : arr[2].toString(16);\n            return parseInt(_str, 16);\n        }\n    }]);\n\n    return FlvParse;\n}();\n\nexports.default = new FlvParse();//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9mbHYvZmx2UGFyc2UuanM/Y2FlOCJdLCJuYW1lcyI6WyJGbHZQYXJzZSIsInRlbXBVaW50OCIsImFyclRhZyIsImluZGV4IiwidGVtcEFyciIsInVpbnQ4IiwicGFyc2UiLCJyZWFkIiwibGVuZ3RoIiwidCIsInRhZ1R5cGUiLCJkYXRhU2l6ZSIsImNvbmNhdCIsIlRpbWVzdGFtcCIsIlN0cmVhbUlEIiwiYm9keSIsImdldEJvZHlTdW0iLCJwdXNoIiwiaSIsImFyciIsIl9zdHIiLCJ0b1N0cmluZyIsInBhcnNlSW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7Ozs7OztJQUNNQSxRO0FBQ0Ysd0JBQWM7QUFBQTs7QUFDVixhQUFLQyxTQUFMLEdBQWlCLEVBQWpCO0FBQ0EsYUFBS0MsTUFBTCxHQUFjLEVBQWQ7QUFDQSxhQUFLQyxLQUFMLEdBQWEsQ0FBYjtBQUNBLGFBQUtDLE9BQUwsR0FBZSxFQUFmO0FBQ0g7O0FBRUQ7Ozs7Ozs7K0JBR09DLEssRUFBTztBQUNWLGlCQUFLSixTQUFMLEdBQWlCSSxLQUFqQjtBQUNBLGlCQUFLQyxLQUFMO0FBQ0g7O0FBRUQ7Ozs7OztnQ0FHUTtBQUNKLGlCQUFLQyxJQUFMLENBQVUsQ0FBVixFQURJLENBQ1U7QUFDZCxpQkFBS0EsSUFBTCxDQUFVLENBQVYsRUFGSSxDQUVVO0FBQ2QsbUJBQU8sS0FBS0osS0FBTCxHQUFhLEtBQUtGLFNBQUwsQ0FBZU8sTUFBbkMsRUFBMkM7QUFDdkMsb0JBQUlDLElBQUksc0JBQVI7QUFDQUEsa0JBQUVDLE9BQUYsR0FBYSxLQUFLSCxJQUFMLENBQVUsQ0FBVixFQUFhLENBQWIsQ0FBYixDQUZ1QyxDQUVSO0FBQy9CRSxrQkFBRUUsUUFBRixHQUFhLEdBQUdDLE1BQUgsQ0FBVyxLQUFLTCxJQUFMLENBQVUsQ0FBVixDQUFYLENBQWIsQ0FIdUMsQ0FHQztBQUN4Q0Usa0JBQUVJLFNBQUYsR0FBYyxHQUFHRCxNQUFILENBQVUsS0FBS0wsSUFBTCxDQUFVLENBQVYsQ0FBVixDQUFkLENBSnVDLENBSUE7QUFDdkNFLGtCQUFFSyxRQUFGLEdBQWEsR0FBR0YsTUFBSCxDQUFVLEtBQUtMLElBQUwsQ0FBVSxDQUFWLENBQVYsQ0FBYixDQUx1QyxDQUtEO0FBQ3RDRSxrQkFBRU0sSUFBRixHQUFTLEdBQUdILE1BQUgsQ0FBVSxLQUFLTCxJQUFMLENBQVUsS0FBS1MsVUFBTCxDQUFnQlAsRUFBRUUsUUFBbEIsQ0FBVixDQUFWLENBQVQsQ0FOdUMsQ0FNcUI7QUFDNUQscUJBQUtULE1BQUwsQ0FBWWUsSUFBWixDQUFpQlIsQ0FBakI7QUFDQSxxQkFBS0YsSUFBTCxDQUFVLENBQVY7QUFDSDtBQUNKOzs7NkJBQ0lDLE0sRUFBUTtBQUNULGlCQUFLSixPQUFMLENBQWFJLE1BQWIsR0FBc0IsQ0FBdEI7QUFDQSxpQkFBSyxJQUFJVSxJQUFJLENBQWIsRUFBZ0JBLElBQUlWLE1BQXBCLEVBQTRCVSxHQUE1QixFQUFpQztBQUM3QixxQkFBS2QsT0FBTCxDQUFhYSxJQUFiLENBQWtCLEtBQUtoQixTQUFMLENBQWUsS0FBS0UsS0FBcEIsQ0FBbEI7QUFDQSxxQkFBS0EsS0FBTCxJQUFjLENBQWQ7QUFDSDtBQUNELG1CQUFPLEtBQUtDLE9BQVo7QUFDSDs7QUFFRDs7Ozs7O21DQUdXZSxHLEVBQUs7QUFDWixnQkFBSUMsT0FBTyxFQUFYO0FBQ0FBLG9CQUFTRCxJQUFJLENBQUosRUFBT0UsUUFBUCxDQUFnQixFQUFoQixFQUFvQmIsTUFBcEIsSUFBOEIsQ0FBOUIsR0FBa0MsTUFBTVcsSUFBSSxDQUFKLEVBQU9FLFFBQVAsQ0FBZ0IsRUFBaEIsQ0FBeEMsR0FBOERGLElBQUksQ0FBSixFQUFPRSxRQUFQLENBQWdCLEVBQWhCLENBQXZFO0FBQ0FELG9CQUFTRCxJQUFJLENBQUosRUFBT0UsUUFBUCxDQUFnQixFQUFoQixFQUFvQmIsTUFBcEIsSUFBOEIsQ0FBOUIsR0FBa0MsTUFBTVcsSUFBSSxDQUFKLEVBQU9FLFFBQVAsQ0FBZ0IsRUFBaEIsQ0FBeEMsR0FBOERGLElBQUksQ0FBSixFQUFPRSxRQUFQLENBQWdCLEVBQWhCLENBQXZFO0FBQ0FELG9CQUFTRCxJQUFJLENBQUosRUFBT0UsUUFBUCxDQUFnQixFQUFoQixFQUFvQmIsTUFBcEIsSUFBOEIsQ0FBOUIsR0FBa0MsTUFBTVcsSUFBSSxDQUFKLEVBQU9FLFFBQVAsQ0FBZ0IsRUFBaEIsQ0FBeEMsR0FBOERGLElBQUksQ0FBSixFQUFPRSxRQUFQLENBQWdCLEVBQWhCLENBQXZFO0FBQ0EsbUJBQU9DLFNBQVNGLElBQVQsRUFBZSxFQUFmLENBQVA7QUFDSDs7Ozs7O2tCQUVVLElBQUlwQixRQUFKLEUiLCJmaWxlIjoiMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0YWcgZnJvbSAnLi9mbHZUYWcuanMnXG5jbGFzcyBGbHZQYXJzZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMudGVtcFVpbnQ4ID0gW107XG4gICAgICAgIHRoaXMuYXJyVGFnID0gW107XG4gICAgICAgIHRoaXMuaW5kZXggPSAwO1xuICAgICAgICB0aGlzLnRlbXBBcnIgPSBbXTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDmjqXlj5cg5aSW6YOo55qEZmx25LqM6L+b5Yi25pWw5o2uXG4gICAgICovXG4gICAgc2V0Rmx2KHVpbnQ4KSB7XG4gICAgICAgIHRoaXMudGVtcFVpbnQ4ID0gdWludDg7XG4gICAgICAgIHRoaXMucGFyc2UoKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDlvIDlp4vop6PmnpBcbiAgICAgKi9cbiAgICBwYXJzZSgpIHtcbiAgICAgICAgdGhpcy5yZWFkKDkpOyAvL+eVpeaOiTnkuKrlrZfoioLnmoRmbHYgaGVhZGVyIHRhZ1xuICAgICAgICB0aGlzLnJlYWQoNCk7IC8v55Wl5o6J56ys5LiA5LiqNOWtl+iKgueahCB0YWcgc2l6ZVxuICAgICAgICB3aGlsZSAodGhpcy5pbmRleCA8IHRoaXMudGVtcFVpbnQ4Lmxlbmd0aCkge1xuICAgICAgICAgICAgbGV0IHQgPSBuZXcgdGFnKCk7XG4gICAgICAgICAgICB0LnRhZ1R5cGUgPSAodGhpcy5yZWFkKDEpWzBdKTsgLy/lj5blh7p0YWfnsbvlnotcbiAgICAgICAgICAgIHQuZGF0YVNpemUgPSBbXS5jb25jYXQoKHRoaXMucmVhZCgzKSkpOyAvL+WPluWHuuWMheS9k+Wkp+Wwj1xuICAgICAgICAgICAgdC5UaW1lc3RhbXAgPSBbXS5jb25jYXQodGhpcy5yZWFkKDQpKTsgLy/lj5blh7rop6PnoIHml7bpl7RcbiAgICAgICAgICAgIHQuU3RyZWFtSUQgPSBbXS5jb25jYXQodGhpcy5yZWFkKDMpKTsgLy/lj5blh7pzdHJlYW0gaWRcbiAgICAgICAgICAgIHQuYm9keSA9IFtdLmNvbmNhdCh0aGlzLnJlYWQodGhpcy5nZXRCb2R5U3VtKHQuZGF0YVNpemUpKSk7IC8v5Y+W5Ye6Ym9keVxuICAgICAgICAgICAgdGhpcy5hcnJUYWcucHVzaCh0KTtcbiAgICAgICAgICAgIHRoaXMucmVhZCg0KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZWFkKGxlbmd0aCkge1xuICAgICAgICB0aGlzLnRlbXBBcnIubGVuZ3RoID0gMDtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdGhpcy50ZW1wQXJyLnB1c2godGhpcy50ZW1wVWludDhbdGhpcy5pbmRleF0pO1xuICAgICAgICAgICAgdGhpcy5pbmRleCArPSAxO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLnRlbXBBcnI7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog6K6h566XdGFn5YyF5L2T5aSn5bCPXG4gICAgICovXG4gICAgZ2V0Qm9keVN1bShhcnIpIHtcbiAgICAgICAgbGV0IF9zdHIgPSBcIlwiO1xuICAgICAgICBfc3RyICs9IChhcnJbMF0udG9TdHJpbmcoMTYpLmxlbmd0aCA9PSAxID8gXCIwXCIgKyBhcnJbMF0udG9TdHJpbmcoMTYpIDogYXJyWzBdLnRvU3RyaW5nKDE2KSk7XG4gICAgICAgIF9zdHIgKz0gKGFyclsxXS50b1N0cmluZygxNikubGVuZ3RoID09IDEgPyBcIjBcIiArIGFyclsxXS50b1N0cmluZygxNikgOiBhcnJbMV0udG9TdHJpbmcoMTYpKTtcbiAgICAgICAgX3N0ciArPSAoYXJyWzJdLnRvU3RyaW5nKDE2KS5sZW5ndGggPT0gMSA/IFwiMFwiICsgYXJyWzJdLnRvU3RyaW5nKDE2KSA6IGFyclsyXS50b1N0cmluZygxNikpO1xuICAgICAgICByZXR1cm4gcGFyc2VJbnQoX3N0ciwgMTYpO1xuICAgIH1cbn1cbmV4cG9ydCBkZWZhdWx0IG5ldyBGbHZQYXJzZSgpO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2pzL2Zsdi9mbHZQYXJzZS5qcyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _flvdemux = __webpack_require__(4);\n\nvar _flvdemux2 = _interopRequireDefault(_flvdemux);\n\nvar _mediaInfo = __webpack_require__(6);\n\nvar _mediaInfo2 = _interopRequireDefault(_mediaInfo);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar tagDemux = function () {\n    function tagDemux() {\n        _classCallCheck(this, tagDemux);\n\n        this.TAG = this.constructor.name;\n\n        this._config = {};\n\n        this._onError = null;\n        this._onMediaInfo = null;\n        this._onTrackMetadata = null;\n        this._onDataAvailable = null;\n\n        this._dataOffset = 0;\n        this._firstParse = true;\n        this._dispatch = false;\n\n        this._hasAudio = false;\n        this._hasVideo = false;\n\n        this._audioInitialMetadataDispatched = false;\n        this._videoInitialMetadataDispatched = false;\n\n        this._mediaInfo = new _mediaInfo2.default();\n        this._mediaInfo.hasAudio = this._hasAudio;\n        this._mediaInfo.hasVideo = this._hasVideo;\n        this._metadata = null;\n        this._audioMetadata = null;\n        this._videoMetadata = null;\n\n        this._naluLengthSize = 4;\n        this._timestampBase = 0; // int32, in milliseconds\n        this._timescale = 1000;\n        this._duration = 0; // int32, in milliseconds\n        this._durationOverrided = false;\n        this._referenceFrameRate = {\n            fixed: true,\n            fps: 23.976,\n            fps_num: 23976,\n            fps_den: 1000\n        };\n\n        this._videoTrack = { type: 'video', id: 1, sequenceNumber: 0, samples: [], length: 0 };\n        this._audioTrack = { type: 'audio', id: 2, sequenceNumber: 0, samples: [], length: 0 };\n\n        this._littleEndian = function () {\n            var buf = new ArrayBuffer(2);\n            new DataView(buf).setInt16(0, 256, true); // little-endian write\n            return new Int16Array(buf)[0] === 256; // platform-spec read, if equal then LE\n        }();\n    }\n\n    _createClass(tagDemux, [{\n        key: 'onMediaInfo',\n        value: function onMediaInfo(callback) {\n            this._onMediaInfo = callback;\n        }\n    }, {\n        key: 'parseMetadata',\n        value: function parseMetadata(arr) {\n            var data = _flvdemux2.default.parseMetadata(arr);\n            this._parseScriptData(data);\n            console.log(this._mediaInfo, this._mediaInfo.isComplete());\n        }\n    }, {\n        key: '_parseScriptData',\n        value: function _parseScriptData(obj) {\n            var scriptData = obj;\n\n            if (scriptData.hasOwnProperty('onMetaData')) {\n                if (this._metadata) {\n                    Log.w(this.TAG, 'Found another onMetaData tag!');\n                }\n                this._metadata = scriptData;\n                var onMetaData = this._metadata.onMetaData;\n\n                if (typeof onMetaData.hasAudio === 'boolean') {\n                    // hasAudio\n                    this._hasAudio = onMetaData.hasAudio;\n                    this._mediaInfo.hasAudio = this._hasAudio;\n                }\n                if (typeof onMetaData.hasVideo === 'boolean') {\n                    // hasVideo\n                    this._hasVideo = onMetaData.hasVideo;\n                    this._mediaInfo.hasVideo = this._hasVideo;\n                }\n                if (typeof onMetaData.audiodatarate === 'number') {\n                    // audiodatarate\n                    this._mediaInfo.audioDataRate = onMetaData.audiodatarate;\n                }\n                if (typeof onMetaData.videodatarate === 'number') {\n                    // videodatarate\n                    this._mediaInfo.videoDataRate = onMetaData.videodatarate;\n                }\n                if (typeof onMetaData.width === 'number') {\n                    // width\n                    this._mediaInfo.width = onMetaData.width;\n                }\n                if (typeof onMetaData.height === 'number') {\n                    // height\n                    this._mediaInfo.height = onMetaData.height;\n                }\n                if (typeof onMetaData.duration === 'number') {\n                    // duration\n                    if (!this._durationOverrided) {\n                        var duration = Math.floor(onMetaData.duration * this._timescale);\n                        this._duration = duration;\n                        this._mediaInfo.duration = duration;\n                    }\n                } else {\n                    this._mediaInfo.duration = 0;\n                }\n                if (typeof onMetaData.framerate === 'number') {\n                    // framerate\n                    var fps_num = Math.floor(onMetaData.framerate * 1000);\n                    if (fps_num > 0) {\n                        var fps = fps_num / 1000;\n                        this._referenceFrameRate.fixed = true;\n                        this._referenceFrameRate.fps = fps;\n                        this._referenceFrameRate.fps_num = fps_num;\n                        this._referenceFrameRate.fps_den = 1000;\n                        this._mediaInfo.fps = fps;\n                    }\n                }\n                if (_typeof(onMetaData.keyframes) === 'object') {\n                    // keyframes\n                    this._mediaInfo.hasKeyframesIndex = true;\n                    var keyframes = onMetaData.keyframes;\n                    keyframes.times = onMetaData.times;\n                    keyframes.filepositions = onMetaData.filepositions;\n                    this._mediaInfo.keyframesIndex = this._parseKeyframesIndex(keyframes);\n                    onMetaData.keyframes = null; // keyframes has been extracted, remove it\n                } else {\n                    this._mediaInfo.hasKeyframesIndex = false;\n                }\n                this._dispatch = false;\n                this._mediaInfo.metadata = onMetaData;\n                console.log(this.TAG, 'Parsed onMetaData');\n                // if (this._mediaInfo.isComplete()) {\n                // this._onMediaInfo(this._mediaInfo);\n                // }\n                return this._mediaInfo;\n            }\n        }\n    }, {\n        key: '_parseKeyframesIndex',\n        value: function _parseKeyframesIndex(keyframes) {\n            var times = [];\n            var filepositions = [];\n\n            // ignore first keyframe which is actually AVC Sequence Header (AVCDecoderConfigurationRecord)\n            for (var i = 1; i < keyframes.times.length; i++) {\n                var time = this._timestampBase + Math.floor(keyframes.times[i] * 1000);\n                times.push(time);\n                filepositions.push(keyframes.filepositions[i]);\n            }\n\n            return {\n                times: times,\n                filepositions: filepositions\n            };\n        }\n    }]);\n\n    return tagDemux;\n}();\n\nexports.default = new tagDemux();//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nfunction decodeUTF8(uint8array) {\n    var out = [];\n    var input = uint8array;\n    var i = 0;\n    var length = uint8array.length;\n\n    while (i < length) {\n        if (input[i] < 0x80) {\n            out.push(String.fromCharCode(input[i]));\n            ++i;\n            continue;\n        } else if (input[i] < 0xC0) {\n            // fallthrough\n        } else if (input[i] < 0xE0) {\n            if (checkContinuation(input, i, 1)) {\n                var ucs4 = (input[i] & 0x1F) << 6 | input[i + 1] & 0x3F;\n                if (ucs4 >= 0x80) {\n                    out.push(String.fromCharCode(ucs4 & 0xFFFF));\n                    i += 2;\n                    continue;\n                }\n            }\n        } else if (input[i] < 0xF0) {\n            if (checkContinuation(input, i, 2)) {\n                var _ucs = (input[i] & 0xF) << 12 | (input[i + 1] & 0x3F) << 6 | input[i + 2] & 0x3F;\n                if (_ucs >= 0x800 && (_ucs & 0xF800) !== 0xD800) {\n                    out.push(String.fromCharCode(_ucs & 0xFFFF));\n                    i += 3;\n                    continue;\n                }\n            }\n        } else if (input[i] < 0xF8) {\n            if (checkContinuation(input, i, 3)) {\n                var _ucs2 = (input[i] & 0x7) << 18 | (input[i + 1] & 0x3F) << 12 | (input[i + 2] & 0x3F) << 6 | input[i + 3] & 0x3F;\n                if (_ucs2 > 0x10000 && _ucs2 < 0x110000) {\n                    _ucs2 -= 0x10000;\n                    out.push(String.fromCharCode(_ucs2 >>> 10 | 0xD800));\n                    out.push(String.fromCharCode(_ucs2 & 0x3FF | 0xDC00));\n                    i += 4;\n                    continue;\n                }\n            }\n        }\n        out.push(String.fromCharCode(0xFFFD));\n        ++i;\n    }\n\n    return out.join('');\n}\n\nexports.default = decodeUTF8;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9kZWNvZGVVVEY4LmpzPzQ3ZWQiXSwibmFtZXMiOlsiZGVjb2RlVVRGOCIsInVpbnQ4YXJyYXkiLCJvdXQiLCJpbnB1dCIsImkiLCJsZW5ndGgiLCJwdXNoIiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwiY2hlY2tDb250aW51YXRpb24iLCJ1Y3M0Iiwiam9pbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxTQUFTQSxVQUFULENBQW9CQyxVQUFwQixFQUFnQztBQUM1QixRQUFJQyxNQUFNLEVBQVY7QUFDQSxRQUFJQyxRQUFRRixVQUFaO0FBQ0EsUUFBSUcsSUFBSSxDQUFSO0FBQ0EsUUFBSUMsU0FBU0osV0FBV0ksTUFBeEI7O0FBRUEsV0FBT0QsSUFBSUMsTUFBWCxFQUFtQjtBQUNmLFlBQUlGLE1BQU1DLENBQU4sSUFBVyxJQUFmLEVBQXFCO0FBQ2pCRixnQkFBSUksSUFBSixDQUFTQyxPQUFPQyxZQUFQLENBQW9CTCxNQUFNQyxDQUFOLENBQXBCLENBQVQ7QUFDQSxjQUFFQSxDQUFGO0FBQ0E7QUFDSCxTQUpELE1BSU8sSUFBSUQsTUFBTUMsQ0FBTixJQUFXLElBQWYsRUFBcUI7QUFDeEI7QUFDSCxTQUZNLE1BRUEsSUFBSUQsTUFBTUMsQ0FBTixJQUFXLElBQWYsRUFBcUI7QUFDeEIsZ0JBQUlLLGtCQUFrQk4sS0FBbEIsRUFBeUJDLENBQXpCLEVBQTRCLENBQTVCLENBQUosRUFBb0M7QUFDaEMsb0JBQUlNLE9BQU8sQ0FBQ1AsTUFBTUMsQ0FBTixJQUFXLElBQVosS0FBcUIsQ0FBckIsR0FBMEJELE1BQU1DLElBQUksQ0FBVixJQUFlLElBQXBEO0FBQ0Esb0JBQUlNLFFBQVEsSUFBWixFQUFrQjtBQUNkUix3QkFBSUksSUFBSixDQUFTQyxPQUFPQyxZQUFQLENBQW9CRSxPQUFPLE1BQTNCLENBQVQ7QUFDQU4seUJBQUssQ0FBTDtBQUNBO0FBQ0g7QUFDSjtBQUNKLFNBVE0sTUFTQSxJQUFJRCxNQUFNQyxDQUFOLElBQVcsSUFBZixFQUFxQjtBQUN4QixnQkFBSUssa0JBQWtCTixLQUFsQixFQUF5QkMsQ0FBekIsRUFBNEIsQ0FBNUIsQ0FBSixFQUFvQztBQUNoQyxvQkFBSU0sT0FBTyxDQUFDUCxNQUFNQyxDQUFOLElBQVcsR0FBWixLQUFvQixFQUFwQixHQUF5QixDQUFDRCxNQUFNQyxJQUFJLENBQVYsSUFBZSxJQUFoQixLQUF5QixDQUFsRCxHQUFzREQsTUFBTUMsSUFBSSxDQUFWLElBQWUsSUFBaEY7QUFDQSxvQkFBSU0sUUFBUSxLQUFSLElBQWlCLENBQUNBLE9BQU8sTUFBUixNQUFvQixNQUF6QyxFQUFpRDtBQUM3Q1Isd0JBQUlJLElBQUosQ0FBU0MsT0FBT0MsWUFBUCxDQUFvQkUsT0FBTyxNQUEzQixDQUFUO0FBQ0FOLHlCQUFLLENBQUw7QUFDQTtBQUNIO0FBQ0o7QUFDSixTQVRNLE1BU0EsSUFBSUQsTUFBTUMsQ0FBTixJQUFXLElBQWYsRUFBcUI7QUFDeEIsZ0JBQUlLLGtCQUFrQk4sS0FBbEIsRUFBeUJDLENBQXpCLEVBQTRCLENBQTVCLENBQUosRUFBb0M7QUFDaEMsb0JBQUlNLFFBQU8sQ0FBQ1AsTUFBTUMsQ0FBTixJQUFXLEdBQVosS0FBb0IsRUFBcEIsR0FBeUIsQ0FBQ0QsTUFBTUMsSUFBSSxDQUFWLElBQWUsSUFBaEIsS0FBeUIsRUFBbEQsR0FDUCxDQUFDRCxNQUFNQyxJQUFJLENBQVYsSUFBZSxJQUFoQixLQUF5QixDQURsQixHQUN1QkQsTUFBTUMsSUFBSSxDQUFWLElBQWUsSUFEakQ7QUFFQSxvQkFBSU0sUUFBTyxPQUFQLElBQWtCQSxRQUFPLFFBQTdCLEVBQXVDO0FBQ25DQSw2QkFBUSxPQUFSO0FBQ0FSLHdCQUFJSSxJQUFKLENBQVNDLE9BQU9DLFlBQVAsQ0FBcUJFLFVBQVMsRUFBVixHQUFnQixNQUFwQyxDQUFUO0FBQ0FSLHdCQUFJSSxJQUFKLENBQVNDLE9BQU9DLFlBQVAsQ0FBcUJFLFFBQU8sS0FBUixHQUFpQixNQUFyQyxDQUFUO0FBQ0FOLHlCQUFLLENBQUw7QUFDQTtBQUNIO0FBQ0o7QUFDSjtBQUNERixZQUFJSSxJQUFKLENBQVNDLE9BQU9DLFlBQVAsQ0FBb0IsTUFBcEIsQ0FBVDtBQUNBLFVBQUVKLENBQUY7QUFDSDs7QUFFRCxXQUFPRixJQUFJUyxJQUFKLENBQVMsRUFBVCxDQUFQO0FBQ0g7O2tCQUVjWCxVIiwiZmlsZSI6IjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBkZWNvZGVVVEY4KHVpbnQ4YXJyYXkpIHtcbiAgICBsZXQgb3V0ID0gW107XG4gICAgbGV0IGlucHV0ID0gdWludDhhcnJheTtcbiAgICBsZXQgaSA9IDA7XG4gICAgbGV0IGxlbmd0aCA9IHVpbnQ4YXJyYXkubGVuZ3RoO1xuXG4gICAgd2hpbGUgKGkgPCBsZW5ndGgpIHtcbiAgICAgICAgaWYgKGlucHV0W2ldIDwgMHg4MCkge1xuICAgICAgICAgICAgb3V0LnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZShpbnB1dFtpXSkpO1xuICAgICAgICAgICAgKytpO1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH0gZWxzZSBpZiAoaW5wdXRbaV0gPCAweEMwKSB7XG4gICAgICAgICAgICAvLyBmYWxsdGhyb3VnaFxuICAgICAgICB9IGVsc2UgaWYgKGlucHV0W2ldIDwgMHhFMCkge1xuICAgICAgICAgICAgaWYgKGNoZWNrQ29udGludWF0aW9uKGlucHV0LCBpLCAxKSkge1xuICAgICAgICAgICAgICAgIGxldCB1Y3M0ID0gKGlucHV0W2ldICYgMHgxRikgPDwgNiB8IChpbnB1dFtpICsgMV0gJiAweDNGKTtcbiAgICAgICAgICAgICAgICBpZiAodWNzNCA+PSAweDgwKSB7XG4gICAgICAgICAgICAgICAgICAgIG91dC5wdXNoKFN0cmluZy5mcm9tQ2hhckNvZGUodWNzNCAmIDB4RkZGRikpO1xuICAgICAgICAgICAgICAgICAgICBpICs9IDI7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChpbnB1dFtpXSA8IDB4RjApIHtcbiAgICAgICAgICAgIGlmIChjaGVja0NvbnRpbnVhdGlvbihpbnB1dCwgaSwgMikpIHtcbiAgICAgICAgICAgICAgICBsZXQgdWNzNCA9IChpbnB1dFtpXSAmIDB4RikgPDwgMTIgfCAoaW5wdXRbaSArIDFdICYgMHgzRikgPDwgNiB8IGlucHV0W2kgKyAyXSAmIDB4M0Y7XG4gICAgICAgICAgICAgICAgaWYgKHVjczQgPj0gMHg4MDAgJiYgKHVjczQgJiAweEY4MDApICE9PSAweEQ4MDApIHtcbiAgICAgICAgICAgICAgICAgICAgb3V0LnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZSh1Y3M0ICYgMHhGRkZGKSk7XG4gICAgICAgICAgICAgICAgICAgIGkgKz0gMztcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKGlucHV0W2ldIDwgMHhGOCkge1xuICAgICAgICAgICAgaWYgKGNoZWNrQ29udGludWF0aW9uKGlucHV0LCBpLCAzKSkge1xuICAgICAgICAgICAgICAgIGxldCB1Y3M0ID0gKGlucHV0W2ldICYgMHg3KSA8PCAxOCB8IChpbnB1dFtpICsgMV0gJiAweDNGKSA8PCAxMiB8XG4gICAgICAgICAgICAgICAgICAgIChpbnB1dFtpICsgMl0gJiAweDNGKSA8PCA2IHwgKGlucHV0W2kgKyAzXSAmIDB4M0YpO1xuICAgICAgICAgICAgICAgIGlmICh1Y3M0ID4gMHgxMDAwMCAmJiB1Y3M0IDwgMHgxMTAwMDApIHtcbiAgICAgICAgICAgICAgICAgICAgdWNzNCAtPSAweDEwMDAwO1xuICAgICAgICAgICAgICAgICAgICBvdXQucHVzaChTdHJpbmcuZnJvbUNoYXJDb2RlKCh1Y3M0ID4+PiAxMCkgfCAweEQ4MDApKTtcbiAgICAgICAgICAgICAgICAgICAgb3V0LnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZSgodWNzNCAmIDB4M0ZGKSB8IDB4REMwMCkpO1xuICAgICAgICAgICAgICAgICAgICBpICs9IDQ7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBvdXQucHVzaChTdHJpbmcuZnJvbUNoYXJDb2RlKDB4RkZGRCkpO1xuICAgICAgICArK2k7XG4gICAgfVxuXG4gICAgcmV0dXJuIG91dC5qb2luKCcnKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZGVjb2RlVVRGODtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9qcy9kZWNvZGVVVEY4LmpzIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar FlvTag = function FlvTag() {\n    _classCallCheck(this, FlvTag);\n\n    this.tagType = -1;\n    this.dataSize = -1;\n    this.Timestamp = -1;\n    this.StreamID = -1;\n    this.body = -1;\n};\n\nexports.default = FlvTag;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9mbHYvZmx2VGFnLmpzPzg1OTgiXSwibmFtZXMiOlsiRmx2VGFnIiwidGFnVHlwZSIsImRhdGFTaXplIiwiVGltZXN0YW1wIiwiU3RyZWFtSUQiLCJib2R5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7OztJQUFxQkEsTSxHQUNqQixrQkFBYztBQUFBOztBQUNWLFNBQUtDLE9BQUwsR0FBZSxDQUFDLENBQWhCO0FBQ0EsU0FBS0MsUUFBTCxHQUFnQixDQUFDLENBQWpCO0FBQ0EsU0FBS0MsU0FBTCxHQUFpQixDQUFDLENBQWxCO0FBQ0EsU0FBS0MsUUFBTCxHQUFnQixDQUFDLENBQWpCO0FBQ0EsU0FBS0MsSUFBTCxHQUFZLENBQUMsQ0FBYjtBQUNILEM7O2tCQVBnQkwsTSIsImZpbGUiOiIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgRmx2VGFnIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy50YWdUeXBlID0gLTE7XG4gICAgICAgIHRoaXMuZGF0YVNpemUgPSAtMTtcbiAgICAgICAgdGhpcy5UaW1lc3RhbXAgPSAtMTtcbiAgICAgICAgdGhpcy5TdHJlYW1JRCA9IC0xO1xuICAgICAgICB0aGlzLmJvZHkgPSAtMTtcbiAgICB9XG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vanMvZmx2L2ZsdlRhZy5qcyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _decodeUTF = __webpack_require__(2);\n\nvar _decodeUTF2 = _interopRequireDefault(_decodeUTF);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar le = function () {\n    var buf = new ArrayBuffer(2);\n    new DataView(buf).setInt16(0, 256, true); // little-endian write\n    return new Int16Array(buf)[0] === 256; // platform-spec read, if equal then LE\n}();\n\nvar flvDemux = function () {\n    function flvDemux() {\n        _classCallCheck(this, flvDemux);\n    }\n\n    _createClass(flvDemux, null, [{\n        key: 'parseObject',\n        value: function parseObject(arrayBuffer, dataOffset, dataSize) {\n\n            var name = flvDemux.parseString(arrayBuffer, dataOffset, dataSize);\n            var value = flvDemux.parseScript(arrayBuffer, dataOffset + name.size);\n            var isObjectEnd = value.objectEnd;\n\n            return {\n                data: {\n                    name: name.data,\n                    value: value.data\n                },\n                size: value.size,\n                objectEnd: isObjectEnd\n            };\n        }\n    }, {\n        key: 'parseVariable',\n        value: function parseVariable(arrayBuffer, dataOffset, dataSize) {\n            return flvDemux.parseObject(arrayBuffer, dataOffset, dataSize);\n        }\n    }, {\n        key: 'parseLongString',\n        value: function parseLongString(arrayBuffer, dataOffset, dataSize) {\n            if (dataSize < 4) {\n                throw new IllegalStateException('Data not enough when parse LongString');\n            }\n            var v = new DataView(arrayBuffer, dataOffset);\n            var length = v.getUint32(0, !le);\n\n            var str = void 0;\n            if (length > 0) {\n                str = (0, _decodeUTF2.default)(new Uint8Array(arrayBuffer, dataOffset + 4, length));\n            } else {\n                str = '';\n            }\n\n            return {\n                data: str,\n                size: 4 + length\n            };\n        }\n    }, {\n        key: 'parseDate',\n        value: function parseDate(arrayBuffer, dataOffset, dataSize) {\n            if (dataSize < 10) {\n                throw new IllegalStateException('Data size invalid when parse Date');\n            }\n            var v = new DataView(arrayBuffer, dataOffset);\n            var timestamp = v.getFloat64(0, !le);\n            var localTimeOffset = v.getInt16(8, !le);\n            timestamp += localTimeOffset * 60 * 1000; // get UTC time\n\n            return {\n                data: new Date(timestamp),\n                size: 8 + 2\n            };\n        }\n    }, {\n        key: 'parseString',\n        value: function parseString(arrayBuffer, dataOffset, dataSize) {\n            var v = new DataView(arrayBuffer, dataOffset);\n            var length = v.getUint16(0, !le);\n            var str = void 0;\n            if (length > 0) {\n                str = (0, _decodeUTF2.default)(new Uint8Array(arrayBuffer, dataOffset + 2, length));\n            } else {\n                str = '';\n            }\n            return {\n                data: str,\n                size: 2 + length\n            };\n        }\n\n        /**\n         * 解析metadata\n         */\n\n    }, {\n        key: 'parseMetadata',\n        value: function parseMetadata(arr) {\n            var name = flvDemux.parseScript(arr, 0);\n            var value = flvDemux.parseScript(arr, name.size, arr.length - name.size);\n            // return {}\n            var data = {};\n            data[name.data] = value.data;\n            return data;\n        }\n    }, {\n        key: 'parseScript',\n        value: function parseScript(arr, offset, dataSize) {\n            var dataOffset = offset;\n            var object = {};\n            var uint8 = new Uint8Array(arr);\n            var buffer = uint8.buffer;\n            var dv = new DataView(buffer, 0, dataSize);\n            var value = null;\n\n            var type = dv.getUint8(dataOffset);\n            dataOffset += 1;\n            switch (type) {\n                case 0:\n                    // Number(Double) type\n                    value = dv.getFloat64(dataOffset, !le);\n                    dataOffset += 8;\n                    break;\n                case 1:\n                    {\n                        // Boolean type\n                        var b = dv.getUint8(dataOffset);\n                        value = b ? true : false;\n                        dataOffset += 1;\n                        break;\n                    }\n                case 2:\n                    {\n                        // String type\n                        // dataOffset += 1;\n                        var amfstr = flvDemux.parseString(buffer, dataOffset);\n                        value = amfstr.data;\n                        dataOffset += amfstr.size;\n                        break;\n                    }\n                case 3:\n\n                    {\n                        // Object(s) type\n                        value = {};\n                        var terminal = 0; // workaround for malformed Objects which has missing ScriptDataObjectEnd\n                        if ((dv.getUint32(dataSize - 4, !le) & 0x00FFFFFF) === 9) {\n                            terminal = 3;\n                        }\n                        while (offset < dataSize - 4) {\n                            // 4 === type(UI8) + ScriptDataObjectEnd(UI24)\n                            var amfobj = flvDemux.parseObject(buffer, dataOffset, dataSize - offset - terminal);\n\n                            if (amfobj.objectEnd) break;\n                            value[amfobj.data.name] = amfobj.data.value;\n                            dataOffset += amfobj.size;\n                        }\n                        if (offset <= dataSize - 3) {\n                            var marker = v.getUint32(dataOffset - 1, !le) & 0x00FFFFFF;\n                            if (marker === 9) {\n                                dataOffset += 3;\n                            }\n                        }\n                        break;\n                    }\n                case 8:\n                    {\n                        // ECMA array type (Mixed array)\n                        value = {};\n                        // dataOffset += 1;\n                        dataOffset += 4; // ECMAArrayLength(UI32)\n                        var _terminal = 0; // workaround for malformed MixedArrays which has missing ScriptDataObjectEnd\n                        if ((dv.getUint32(dataSize - 4, !le) & 0x00FFFFFF) === 9) {\n                            _terminal = 3;\n                        }\n                        while (dataOffset < dataSize - 8) {\n                            // 8 === type(UI8) + ECMAArrayLength(UI32) + ScriptDataVariableEnd(UI24)\n                            var amfvar = flvDemux.parseVariable(buffer, dataOffset);\n\n                            if (amfvar.objectEnd) break;\n                            value[amfvar.data.name] = amfvar.data.value;\n                            dataOffset = amfvar.size;\n                        }\n                        if (dataOffset <= dataSize - 3) {\n                            var _marker = dv.getUint32(dataOffset - 1, !le) & 0x00FFFFFF;\n                            if (_marker === 9) {\n                                dataOffset += 3;\n                            }\n                        }\n                        break;\n                    }\n                case 9:\n                    // ScriptDataObjectEnd\n                    value = undefined;\n                    dataOffset = 1;\n                    objectEnd = true;\n                    break;\n                case 10:\n                    {\n                        // Strict array type\n                        // ScriptDataValue[n]. NOTE: according to video_file_format_spec_v10_1.pdf\n                        value = [];\n                        var strictArrayLength = dv.getUint32(dataOffset, !le);\n                        dataOffset += 4;\n                        for (var i = 0; i < strictArrayLength; i++) {\n                            var val = flvDemux.parseScript(buffer, dataOffset);\n                            value.push(val.data);\n                            dataOffset = val.size;\n                        }\n                        break;\n                    }\n                case 11:\n                    {\n                        // Date type\n                        var date = flvDemux.parseDate(buffer, dataOffset + 1, dataSize - 1);\n                        value = date.data;\n                        dataOffset += date.size;\n                        break;\n                    }\n                case 12:\n                    {\n                        // Long string type\n                        var amfLongStr = flvDemux.parseString(buffer, dataOffset + 1, dataSize - 1);\n                        value = amfLongStr.data;\n                        dataOffset += amfLongStr.size;\n                        break;\n                    }\n                default:\n                    // ignore and skip\n                    dataOffset = dataSize;\n                    console.log('AMF', 'Unsupported AMF value type ' + type);\n            }\n            return {\n                data: value,\n                size: dataOffset\n            };\n        }\n    }]);\n\n    return flvDemux;\n}();\n\nexports.default = flvDemux;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _flvParse = __webpack_require__(0);\n\nvar _flvParse2 = _interopRequireDefault(_flvParse);\n\nvar _tagdemux = __webpack_require__(1);\n\nvar _tagdemux2 = _interopRequireDefault(_tagdemux);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nwindow.flvParse = {\n    setFlv: function setFlv(uint8) {\n        _flvParse2.default.setFlv(uint8);\n        _tagdemux2.default.parseMetadata(_flvParse2.default.arrTag[0].body);\n    },\n    nextTag: function nextTag() {}\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9mbHZFbnRlci5qcz9iZGJiIl0sIm5hbWVzIjpbIndpbmRvdyIsImZsdlBhcnNlIiwic2V0Rmx2IiwidWludDgiLCJwYXJzZU1ldGFkYXRhIiwiYXJyVGFnIiwiYm9keSIsIm5leHRUYWciXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7QUFDQTs7Ozs7O0FBQ0FBLE9BQU9DLFFBQVAsR0FBa0I7QUFDZEMsWUFBUSxnQkFBU0MsS0FBVCxFQUFnQjtBQUNwQiwyQkFBU0QsTUFBVCxDQUFnQkMsS0FBaEI7QUFDQSwyQkFBU0MsYUFBVCxDQUF1QixtQkFBU0MsTUFBVCxDQUFnQixDQUFoQixFQUFtQkMsSUFBMUM7QUFDSCxLQUphO0FBS2RDLGFBQVMsbUJBQVcsQ0FFbkI7QUFQYSxDQUFsQiIsImZpbGUiOiI1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGZsdnBhcnNlIGZyb20gJy4vZmx2L2ZsdlBhcnNlJ1xuaW1wb3J0IHRhZ2RlbXV4IGZyb20gJy4vZmx2L3RhZ2RlbXV4J1xud2luZG93LmZsdlBhcnNlID0ge1xuICAgIHNldEZsdjogZnVuY3Rpb24odWludDgpIHtcbiAgICAgICAgZmx2cGFyc2Uuc2V0Rmx2KHVpbnQ4KTtcbiAgICAgICAgdGFnZGVtdXgucGFyc2VNZXRhZGF0YShmbHZwYXJzZS5hcnJUYWdbMF0uYm9keSk7XG4gICAgfSxcbiAgICBuZXh0VGFnOiBmdW5jdGlvbigpIHtcblxuICAgIH1cbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9qcy9mbHZFbnRlci5qcyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar MediaInfo = function () {\n    function MediaInfo() {\n        _classCallCheck(this, MediaInfo);\n\n        this.mimeType = null;\n        this.duration = null;\n\n        this.hasAudio = null;\n        this.hasVideo = null;\n        this.audioCodec = null;\n        this.videoCodec = null;\n        this.audioDataRate = null;\n        this.videoDataRate = null;\n\n        this.audioSampleRate = null;\n        this.audioChannelCount = null;\n\n        this.width = null;\n        this.height = null;\n        this.fps = null;\n        this.profile = null;\n        this.level = null;\n        this.chromaFormat = null;\n        this.sarNum = null;\n        this.sarDen = null;\n\n        this.metadata = null;\n        this.segments = null; // MediaInfo[]\n        this.segmentCount = null;\n        this.hasKeyframesIndex = null;\n        this.keyframesIndex = null;\n    }\n\n    _createClass(MediaInfo, [{\n        key: \"isComplete\",\n        value: function isComplete() {\n            var audioInfoComplete = this.hasAudio === false || this.hasAudio === true && this.audioCodec != null && this.audioSampleRate != null && this.audioChannelCount != null;\n\n            var videoInfoComplete = this.hasVideo === false || this.hasVideo === true && this.videoCodec != null && this.width != null && this.height != null && this.fps != null && this.profile != null && this.level != null && this.chromaFormat != null && this.sarNum != null && this.sarDen != null;\n\n            // keyframesIndex may not be present\n            return this.mimeType != null && this.duration != null && this.metadata != null && this.hasKeyframesIndex != null && audioInfoComplete && videoInfoComplete;\n        }\n    }, {\n        key: \"isSeekable\",\n        value: function isSeekable() {\n            return this.hasKeyframesIndex === true;\n        }\n    }, {\n        key: \"getNearestKeyframe\",\n        value: function getNearestKeyframe(milliseconds) {\n            if (this.keyframesIndex == null) {\n                return null;\n            }\n\n            var table = this.keyframesIndex;\n            var keyframeIdx = this._search(table.times, milliseconds);\n\n            return {\n                index: keyframeIdx,\n                milliseconds: table.times[keyframeIdx],\n                fileposition: table.filepositions[keyframeIdx]\n            };\n        }\n    }, {\n        key: \"_search\",\n        value: function _search(list, value) {\n            var idx = 0;\n\n            var last = list.length - 1;\n            var mid = 0;\n            var lbound = 0;\n            var ubound = last;\n\n            if (value < list[0]) {\n                idx = 0;\n                lbound = ubound + 1; // skip search\n            }\n\n            while (lbound <= ubound) {\n                mid = lbound + Math.floor((ubound - lbound) / 2);\n                if (mid === last || value >= list[mid] && value < list[mid + 1]) {\n                    idx = mid;\n                    break;\n                } else if (list[mid] < value) {\n                    lbound = mid + 1;\n                } else {\n                    ubound = mid - 1;\n                }\n            }\n\n            return idx;\n        }\n    }]);\n\n    return MediaInfo;\n}();\n\nexports.default = MediaInfo;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ })
/******/ ]);